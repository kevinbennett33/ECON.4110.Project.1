---
title: "Data.Exploration.Project.ECON.4110"
format: 
  html:
    embed-resources: true
editor: visual
---

# ECON 4110 : Data Exploration Project Deadline : 5.14.23

**Research Question:** Among colleges that predominantly grant bachelorâ€™s degrees, did the release of the Scorecard shift student interest to high-earnings colleges relative to low-earnings ones (as proxied by Google searches for keywords associated with those colleges)?

## **1) Import, Clean, and Join Relevant Data**

```{r}
# Set wd
# load relevant packages. 
library(rio)
library(lubridate)
library(stringr)
library(tidyverse)
library(vtable)
library(fixest)
```

```{r}
# Create list of files after setting wd to Rawdata.
files <- list.files(pattern = 'trends_up_to', full.names = TRUE)

# Use import_list to compile the list of files into a dataset.
data <- import_list(files, rbind = TRUE, fill = TRUE)   
```

```{r}
# Convert data to date format and aggregate by month. 
data <- data %>% 
  mutate(week = str_sub(monthorweek, start = 1, end = 10)) %>%
  mutate(week = ymd(week)) %>%
  mutate(month = floor_date(week,"month"))

# Aggregate by schname and keyword and standardize the index varaible.
data <- data %>% 
  group_by(schname, keyword) %>%
  mutate(index.standard = ((index-mean(index))/sd(index)))
```

```{r}
# Use import() to read in scorecard data.
Scorecard <- import('Most+Recent+Cohorts+(Scorecard+Elements).csv')
# Use names()[] to change the UNITID and OPEID column names to lower case. 
  names(Scorecard)[1] <- "unitid"
  names(Scorecard)[2] <- "opeid"

#use import() to read in the id_name_link.csv file
id_name_link <- import('id_name_link.csv')
```

```{r}
# Merge in the Scorecard Data. 
  # Use group_by() and mutate(n = n()) to count how many times each school name pops up in id_name_link.
      # mutate(n = n()) creates a new variable, n, in the data frame that represents the number of rows in each group.
  # Then, filter() to get rid of any school names that show up more than once.
group_by(id_name_link, schname) %>%
  mutate(schname_count = n()) %>%
  filter(schname_count == 1)

# Use the "schname" variable to link up the Google trends data (data) to id_name_link. 
# Then use the "unitid" or "opeid" columns to link THAT to the Scorecard data. 
  # inner_join() can perform both of these links. 
data_JOIN_id_name_link_BY_schname <- inner_join(data, id_name_link, by = 'schname')

Scorecard_JOIN_data_AND_id_name_link_BY_unitid <- 
  inner_join(data_JOIN_id_name_link_BY_schname, Scorecard, by = "unitid")
Scorecard_JOIN_data_AND_id_name_link_BY_unitid
```

## 2) Modify Data for Regression

```{r}
# Filter for Bachelor Degree Universities using the variable name PREDDEG and set it to 3. 
Scorecard_JOIN_data_AND_id_name_link_BY_unitid <- 
  filter(Scorecard_JOIN_data_AND_id_name_link_BY_unitid, PREDDEG == 3)
```

```{r}
# Define high, average, low income
income.mean <- Scorecard_JOIN_data_AND_id_name_link_BY_unitid$`md_earn_wne_p10-REPORTED-EARNINGS` %>% 
  as.numeric %>% 
  na.omit()%>%
  mean()
income.sd <- Scorecard_JOIN_data_AND_id_name_link_BY_unitid$`md_earn_wne_p10-REPORTED-EARNINGS` %>% 
  as.numeric() %>% 
  na.omit() %>% 
  sd()
income.high <- income.mean+income.sd
income.low <- income.mean-income.sd
tibble(income.low, income.mean, income.high)
```

```{r}
#Define and clean variables of interest
income <- as.numeric(Scorecard_JOIN_data_AND_id_name_link_BY_unitid$`md_earn_wne_p10-REPORTED-EARNINGS`) 
schname <- Scorecard_JOIN_data_AND_id_name_link_BY_unitid$schname
index <- as.numeric(Scorecard_JOIN_data_AND_id_name_link_BY_unitid$index.standard)
Date.bymonth <- as.Date(Scorecard_JOIN_data_AND_id_name_link_BY_unitid$month)
```

## 3) Create Regression Data Frame

```{r}
# New df with only variables of interest
Plot.df <- data.frame(
  Date.bymonth = Date.bymonth,
  University.Name = schname,
  University.Mean.Income = income,
  University.Interest = index
)
```

```{r}
# eliminate rows with NA values (privacy protected)
Plot.df <- Plot.df %>%
  filter(!is.na(University.Mean.Income) & !is.na(University.Interest))
```

```{r}
# Date of Scorecard Introduction : 2015-09
# Create a new column "Scorecard.pre.post" based on the date condition
Plot.df <- Plot.df %>%
  mutate(Scorecard.pre.post = case_when(
    Date.bymonth <= as.Date("2015-09-12") ~ "Before",
    Date.bymonth > as.Date("2015-09-12") ~ "After"
  ))
```

```{r}
# Create a set of variables that are 'High'  if the school is high income, 'Low' if low income, and 'Medium' if in the middle.
# neither high nor Low income, and 'Low' if the school is low income.
Plot.df <- Plot.df %>%
  mutate(University.Income.Category = case_when(
    University.Mean.Income >= income.high ~ 'High',
    University.Mean.Income >= income.low ~ 'Medium',
    University.Mean.Income <= income.low ~ 'Low')
    )
```

```{r}
# Summarize mean interest over time per group. Save to new data frame to be used for OLS Regression. 
Plot.df2 <- Plot.df %>% group_by(Date.bymonth, University.Income.Category) %>%
  summarize(Group.Mean.Interest = mean(University.Interest)) 
# Date of Scorecard Introduction : 2015-09
# Create a new column "Scorecard.pre.post" based on the date condition
Plot.df2 <- Plot.df2 %>% mutate(Scorecard.pre.post = case_when(
    Date.bymonth <= as.Date("2015-09-12") ~ "Before" ,
    Date.bymonth > as.Date("2015-09-12") ~ "After"
    ))
```

## 4) Plot Data

```{r}
# Plot data
#gg point plot
Plot.point <- ggplot(Plot.df2, aes(x = Date.bymonth, y = Group.Mean.Interest, color = University.Income.Category)) +
  geom_point() +
  geom_smooth(method = 'lm') +
  geom_vline(xintercept = ymd('2015-09-12'))
Plot.point
# gg point and line plot
Plot.line <- ggplot(Plot.df2, aes(x = Date.bymonth, y = Group.Mean.Interest, color = University.Income.Category)) +
  geom_line() +
  geom_point() +
  geom_smooth(method = 'lm') +
  geom_vline(xintercept = as.Date('2015-09-12'), color = "orange", linetype = "dashed") +
  theme_minimal() +
  labs(title = 'Standardized Google Trends Index for Bachelor-Focused Universities by Income Category', x = 'Date', y = 'Interest')
Plot.line
```

## 6) Run Regression

```{r}
# OLS Regression
# regress index on scorecard. 
OLS.Reg.Plot.df2 <- Plot.df2 %>% feols(Group.Mean.Interest ~ i(Scorecard.pre.post, ref = 'Before'))
etable(OLS.Reg.Plot.df2)

#Control for time, and Income Category

OLS.Reg.Plot.df2 <- Plot.df2 %>% feols(Group.Mean.Interest ~ i(Scorecard.pre.post, ref = 'After')*University.Income.Category + i(University.Income.Category, ref = 'Low')) 

etable(OLS.Reg.Plot.df2)
```

## Interpret Regression and Concludes

Interpret Coefficients of Interest:

For the coefficient "University.Income.CategoryHigh x i(Scorecard.pre.post,ref='After')":

-   The estimated coefficient of -0.0524 suggests that, when Scorecard.pre.post is in its "After" form, there is a negative interaction effect between the "High" level of University.Income.Category and Group.Mean.Interest.

-   This means that for universities classified as "High" in terms of University.Income.Category, the effect of Scorecard.pre.post taking the "After" form is associated with a decrease in Group.Mean.Interest of, compared to the reference level ("Before").

For the coefficient "University.Income.CategoryLow x i(Scorecard.pre.post,ref='After')":

-   The estimated coefficient of -0.0546 suggests that, when Scorecard.pre.post takes the "After" form, there is a negative interaction effect between the "Low" level of University.Income.Category and Group.Mean.Interest.

-   This means that for institutions classified as "Low" in terms of University.Income.Category, the effect of Scorecard.pre.post being in its "After" form is associated with a decrease in Group.Mean.Interest, compared to the reference level ("Before").

However, none of the coefficients are statistically significant at the generally accepted levels, signifying that this effect is likely due to random chance, and the scorecard had no significant effect on searches.
