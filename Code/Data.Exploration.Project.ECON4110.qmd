---
title: "Data.Exploration.Project.ECON.4110"
format: html
editor: visual
---

# `ECON 4110 : Data Exploration Project Deadline : 5.14.23`

# **`Research Question:`**`Among colleges that predominantly grant bachelorâ€™s degrees, did the release of the Scorecard shift student interest to high-earnings colleges relative to low-earnings ones (as proxied by Google searches for keywords associated with those colleges)?`

# **`1) Import, Clean, and Join Relevant Data`**

```{r}
# Set wd
# load relevant packages. 
library(rio)
library(lubridate)
library(stringr)
library(tidyverse)
library(vtable)
library(fixest)
```

```{r}
# Create list of files after setting wd to Rawdata.
files <- list.files(pattern = 'trends_up_to', full.names = TRUE)

# Use import_list to compile the list of files into a dataset.
data <- import_list(files, rbind = TRUE, fill = TRUE)   
```

```{r}
# Convert data to date format and aggregate by month. 
data <- data %>% 
  mutate(week = str_sub(monthorweek, start = 1, end = 10)) %>%
  mutate(week = ymd(week)) %>%
  mutate(month = floor_date(week,"month"))

# Aggregate by schname and keyword and standardize the index varaible.
data <- data %>% 
  group_by(schname, keyword) %>%
  mutate(index.standard = ((index-mean(index))/sd(index)))
```

```{r}
# Use import() to read in scorecard data.
Scorecard <- import('Most+Recent+Cohorts+(Scorecard+Elements).csv')
# Use names()[] to change the UNITID and OPEID column names to lower case. 
  names(Scorecard)[1] <- "unitid"
  names(Scorecard)[2] <- "opeid"

#use import() to read in the id_name_link.csv file
id_name_link <- import('id_name_link.csv')
```

```{r}
# Merge in the Scorecard Data. 
  # Use group_by() and mutate(n = n()) to count how many times each school name pops up in id_name_link.
      # mutate(n = n()) creates a new variable, n, in the data frame that represents the number of rows in each group.
  # Then, filter() to get rid of any school names that show up more than once.
group_by(id_name_link, schname) %>%
  mutate(schname_count = n()) %>%
  filter(schname_count == 1)

# Use the "schname" variable to link up the Google trends data (data) to id_name_link. 
# Then use the "unitid" or "opeid" columns to link THAT to the Scorecard data. 
  # inner_join() can perform both of these links. 
data_JOIN_id_name_link_BY_schname <- inner_join(data, id_name_link, by = 'schname')

Scorecard_JOIN_data_AND_id_name_link_BY_unitid <- 
  inner_join(data_JOIN_id_name_link_BY_schname, Scorecard, by = "unitid")
Scorecard_JOIN_data_AND_id_name_link_BY_unitid
```

# `2) Modify Data for Regression`

```{r}
# Filter for Bachelor Degree Universities using the variable name PREDDEG and set it to 3. 
Scorecard_JOIN_data_AND_id_name_link_BY_unitid <- 
  filter(Scorecard_JOIN_data_AND_id_name_link_BY_unitid, PREDDEG == 3)
```

```{r}
# Define high, average, low income
income.mean <- Scorecard_JOIN_data_AND_id_name_link_BY_unitid$`md_earn_wne_p10-REPORTED-EARNINGS` %>% 
  as.numeric %>% 
  na.omit()%>%
  mean()
income.sd <- Scorecard_JOIN_data_AND_id_name_link_BY_unitid$`md_earn_wne_p10-REPORTED-EARNINGS` %>% 
  as.numeric() %>% 
  na.omit() %>% 
  sd()
income.high <- income.mean+income.sd
income.low <- income.mean-income.sd
tibble(income.low, income.mean, income.high)
```

```{r}
#Define and clean variables of interest
income <- as.numeric(Scorecard_JOIN_data_AND_id_name_link_BY_unitid$`md_earn_wne_p10-REPORTED-EARNINGS`) 
schname <- Scorecard_JOIN_data_AND_id_name_link_BY_unitid$schname
index <- as.numeric(Scorecard_JOIN_data_AND_id_name_link_BY_unitid$index.standard)
Date.bymonth <- as.Date(Scorecard_JOIN_data_AND_id_name_link_BY_unitid$month)
```

# `3) Create Regression Data Frame`

```{r}
# New df with only variables of interest
Plot.df <- data.frame(
  Date.bymonth = Date.bymonth,
  University.Name = schname,
  University.Mean.Income = income,
  University.Interest = index
)
```

```{r}
# eliminate rows with NA values (privacy protected)
Plot.df <- Plot.df %>%
  filter(!is.na(University.Mean.Income) & !is.na(University.Interest))
```

```{r}
# Date of Scorecard Introduction : 2015-09
# Create a new column "Scorecard.pre.post" based on the date condition
Plot.df <- Plot.df %>%
  mutate(Scorecard.pre.post = case_when(
    Date.bymonth <= as.Date("2015-09-12") ~ "Before",
    Date.bymonth > as.Date("2015-09-12") ~ "After"
  ))
```

```{r}
# Create a set of variables that are 'High'  if the school is high income, 'Low' if low income, and 'Medium' if in the middle.
# neither high nor Low income, and 'Low' if the school is low income.
Plot.df <- Plot.df %>%
  mutate(University.Income.Category = case_when(
    University.Mean.Income >= income.high ~ 'High',
    University.Mean.Income >= income.low ~ 'Medium',
    University.Mean.Income <= income.low ~ 'Low')
    )
```

```{r}
# Summarize mean interest over time per group. Save to new data frame to be used for OLS Regression. 
Plot.df2 <- Plot.df %>% group_by(Date.bymonth, University.Income.Category) %>%
  summarize(Group.Mean.Interest = mean(University.Interest)) 
# Date of Scorecard Introduction : 2015-09
# Create a new column "Scorecard.pre.post" based on the date condition
Plot.df2 <- Plot.df2 %>% mutate(Scorecard.pre.post = case_when(
    Date.bymonth <= as.Date("2015-09-12") ~ "Before" ,
    Date.bymonth > as.Date("2015-09-12") ~ "After"
    ))
```

# `4) Plot Data`

```{r}
# Plot data
#gg point plot
Plot.point <- ggplot(Plot.df2, aes(x = Date.bymonth, y = Group.Mean.Interest, color = University.Income.Category)) +
  geom_point() +
  geom_smooth(method = 'lm') +
  geom_vline(xintercept = ymd('2015-09-12'))
Plot.point
# gg point and line plot
Plot.line <- ggplot(Plot.df2, aes(x = Date.bymonth, y = Group.Mean.Interest, color = University.Income.Category)) +
  geom_line() +
  geom_point() +
  geom_smooth(method = 'lm') +
  geom_vline(xintercept = as.Date('2015-09-12'), color = "orange", linetype = "dashed") +
  theme_minimal() +
  labs(title = 'Standardized Google Trends Index for Bachelor-Focused Universities by Income Category', x = 'Date', y = 'Interest')
Plot.line
```

# `6) Run Regression`

```{r}
# OLS Regression
# regress index on scorecard. 
OLS.Reg.Plot.df2 <- Plot.df2 %>% feols(Group.Mean.Interest ~ i(Scorecard.pre.post, ref = 'Before'))
etable(OLS.Reg.Plot.df2)

#Control for time, and Income Category

OLS.Reg.Plot.df2 <- Plot.df2 %>% feols(Group.Mean.Interest ~ i(Scorecard.pre.post, ref = 'Before')*Date.bymonth + i(University.Income.Category, ref = 'Medium'))
etable(OLS.Reg.Plot.df2)
```

# `Interpret Regression and Conclude`

This regression model aims to explain the relationship between the dependent variable "Group.Mean.Interest" and several independent variables.

[Coefficient Interpretation:]{.underline}

**Beta 0:** The estimated intercept of the regression equation is 9.981. This means that when all other independent variables are zero, the expected value of "Group.Mean.Interest" is 9.981.

**Beta 1:** i(factor_var=Scorecard.pre.post, ref="Before"): This variable represents the effect of the factor variable "Scorecard.pre.post" with a reference level of "Before". The coefficient estimate is 12.16, but it is not statistically significant at conventional levels (p-value \> 0.05). This suggests that there is no significant difference in "Group.Mean.Interest" between the "Before" and "After" levels of the "Scorecard.pre.post" variable.

**Beta 2:** Date.bymonth: The coefficient estimate is -0.0006, and it is statistically significant (p-value \< 0.001). This suggests that as the "Date.bymonth" variable increases by one unit, "Group.Mean.Interest" decreases by 0.0006 units.

**Beta 3:** University.Income.Category = High: This variable represents the effect of the "University.Income.Category" variable when it takes the value "High". The coefficient estimate is 0.0031, but it is not statistically significant (p-value \> 0.05). This suggests that there is no significant difference in "Group.Mean.Interest" between the "High" and "Low" levels of the "University.Income.Category" variable.

**Beta 4:** University.Income.Category = Low: This variable represents the effect of the "University.Income.Category" variable when it takes the value "Low". The coefficient estimate is -0.0092, but it is not statistically significant (p-value \> 0.05). This suggests that there is no significant difference in "Group.Mean.Interest" between the "High" and "Low" levels of the "University.Income.Category" variable.

**Beta 5:** Date.bymonth\*i(Scorecard.pre.post, ref="Before"): This variable represents the interaction effect between "Date.bymonth" and the factor variable "Scorecard.pre.post" with a reference level of "Before". The coefficient estimate is -0.0007, but it is not statistically significant (p-value \> 0.05). This suggests that there is no significant interaction effect between "Date.bymonth" and "Scorecard.pre.post" on "Group.Mean.Interest".

**R Square:** The R-squared value of 0.23246 indicates that the independent variables in the model explain approximately 23.2% of the variation in the dependent variable. The adjusted R-squared value of 0.19591 accounts for the degrees of freedom and provides a more accurate measure of model fit. Note that it is lower than the unadjusted value.

R-Square is not especially relevant in this analysis, however.

The model suggests that the "Date.bymonth" variable has a significant negative effect on "Group.Mean.Interest". Time is the only variable that has a statistically significant effect on Group.Mean.Interest.
